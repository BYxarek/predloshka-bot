import logging
from telegram import Update, Bot, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, filters, CallbackContext, CallbackQueryHandler

# –ó–∞–¥–∞–π—Ç–µ —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞ –∏ ID —á–∞—Ç–∞ –¥–ª—è –ø–µ—Ä–µ—Å—ã–ª–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
TOKEN = ''
FORWARD_CHAT_ID = '-1002485'  # ID –≥—Ä—É–ø–ø—ã, –∫—É–¥–∞ –ø–µ—Ä–µ—Å—ã–ª–∞—é—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏—è

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)
logger = logging.getLogger(__name__)

# –°–ª–æ–≤–∞—Ä—å —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏
MESSAGES = {
    'ru': {
        'start': "üëä –ü—Ä–∏–≤–µ—Ç!\n–¢—É—Ç —Ç—ã –º–æ–∂–µ—à—å –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Å–≤–æ—é –∏–¥–µ—é –¥–ª—è –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞/—Ñ–æ—Ä—É–º–∞/–±–æ—Ç–æ–≤!\n\n–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å —Å–≤–æ—é –∏–¥–µ—é –±–æ—Ç—É –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –∏ –æ–Ω–∞ –±—É–¥–µ—Ç —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∞.\n–°–ø–∞—Å–∏–±–æ!",
        'thanks': "ü´° –ü—Ä–∏–Ω—è—Ç–æ, —Å–ø–∞—Å–∏–±–æ!",
        'error': "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
        'confirm': "–í–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ:\n{msg}\n\n–û—Ç–ø—Ä–∞–≤–∏—Ç—å?",
        'canceled': "‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ.",
        'lang_set': "–Ø–∑—ã–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: –†—É—Å—Å–∫–∏–π",
        'lang_error': "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ 'ru' –∏–ª–∏ 'en'. –ü—Ä–∏–º–µ—Ä: /lang ru",
        'help': (
            "üìñ **–ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É**\n\n"
            "–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–µ–¥–ª–∞–≥–∞—Ç—å –∏–¥–µ–∏ –¥–ª—è –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞, —Ñ–æ—Ä—É–º–∞ –∏–ª–∏ –±–æ—Ç–æ–≤. "
            "–í–∞—à–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏.\n\n"
            "**–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:**\n"
            "1. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤–∞—à–µ–π –∏–¥–µ–µ–π (—Ç–µ–∫—Å—Ç, —Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ, –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç).\n"
            "2. –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∫—É, –Ω–∞–∂–∞–≤ '–û—Ç–ø—Ä–∞–≤–∏—Ç—å'.\n"
            "3. –î–æ–∂–¥–∏—Ç–µ—Å—å –æ—Ç–≤–µ—Ç–∞ (–µ—Å–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è —Ä–µ—à–∏—Ç –æ—Ç–≤–µ—Ç–∏—Ç—å).\n\n"
            "**–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**\n"
            "- /start ‚Äî –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º.\n"
            "- /help ‚Äî –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.\n"
            "- /lang <ru –∏–ª–∏ en> ‚Äî –°–º–µ–Ω–∏—Ç—å —è–∑—ã–∫ (–Ω–∞–ø—Ä–∏–º–µ—Ä, /lang en).\n\n"
            "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–∏ –∏–¥–µ–∏!"
        )
    },
    'en': {
        'start': "üëä Hi!\nHere you can suggest your idea for our server/forum/bots!\n\nJust send your idea to the bot in private messages, and it will be reviewed.\nThanks!",
        'thanks': "ü´° Accepted, thanks!",
        'error': "‚ùå An error occurred while sending. Try again later.",
        'confirm': "Your suggestion:\n{msg}\n\nSend it?",
        'canceled': "‚ùå Canceled.",
        'lang_set': "Language set: English",
        'lang_error': "Please choose 'ru' or 'en'. Example: /lang en",
        'help': (
            "üìñ **Bot Help**\n\n"
            "This bot allows you to suggest ideas for our server, forum, or bots. "
            "Your suggestions will be sent to the administration for review.\n\n"
            "**How to use:**\n"
            "1. Send a message with your idea (text, photo, video, voice message, or document).\n"
            "2. Confirm sending by clicking 'Send'.\n"
            "3. Wait for a response (if the administration decides to reply).\n\n"
            "**Available commands:**\n"
            "- /start ‚Äî Start working with the bot.\n"
            "- /help ‚Äî Show this message.\n"
            "- /lang <ru or en> ‚Äî Change language (e.g., /lang ru).\n\n"
            "Thank you for your ideas!"
        )
    }
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —è–∑—ã–∫–∞
def get_user_language(update: Update, context: CallbackContext) -> str:
    # –ï—Å–ª–∏ —è–∑—ã–∫ —É–∂–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ context.user_data, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –µ–≥–æ
    if 'language' in context.user_data:
        return context.user_data['language']
    
    # –ò–Ω–∞—á–µ –æ–ø—Ä–µ–¥–µ–ª—è–µ–º —è–∑—ã–∫ –ø–æ Telegram –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º
    user_lang = update.message.from_user.language_code if update.message.from_user.language_code else 'ru'
    lang = user_lang[:2] if user_lang[:2] in MESSAGES else 'ru'
    context.user_data['language'] = lang
    return lang

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: CallbackContext) -> None:
    lang = get_user_language(update, context)
    await update.message.reply_text(MESSAGES[lang]['start'])

# –ö–æ–º–∞–Ω–¥–∞ /help
async def help_command(update: Update, context: CallbackContext) -> None:
    lang = get_user_language(update, context)
    await update.message.reply_text(MESSAGES[lang]['help'])

# –ö–æ–º–∞–Ω–¥–∞ /lang –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —è–∑—ã–∫–∞
async def set_language(update: Update, context: CallbackContext) -> None:
    if not context.args or context.args[0] not in MESSAGES:
        lang = get_user_language(update, context)
        await update.message.reply_text(MESSAGES[lang]['lang_error'])
        return
    
    new_lang = context.args[0]
    context.user_data['language'] = new_lang
    await update.message.reply_text(MESSAGES[lang]['lang_set'])

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –∑–∞–ø—Ä–æ—Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
async def handle_message(update: Update, context: CallbackContext) -> None:
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏—à–ª–æ –∏–∑ –ª–∏—á–Ω–æ–≥–æ —á–∞—Ç–∞, –∞ –Ω–µ –∏–∑ –≥—Ä—É–ø–ø—ã –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
    if str(update.message.chat_id) == FORWARD_CHAT_ID:
        logger.info(f"–ü—Ä–æ–ø—É—â–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –≥—Ä—É–ø–ø—ã {FORWARD_CHAT_ID}")
        return

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π –ø–µ—Ä–µ—Å—ã–ª–∫–∏
    context.user_data['pending_message'] = update.message.message_id
    lang = get_user_language(update, context)

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    msg_content = update.message.text or update.message.caption or ("–ú–µ–¥–∏–∞ –±–µ–∑ —Ç–µ–∫—Å—Ç–∞" if lang == 'ru' else "Media without text")
    confirm_text = MESSAGES[lang]['confirm'].format(msg=msg_content)

    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ "–û—Ç–ø—Ä–∞–≤–∏—Ç—å" –∏ "–û—Ç–º–µ–Ω–∏—Ç—å" —Å —É—á–µ—Ç–æ–º —è–∑—ã–∫–∞
    keyboard = [
        [InlineKeyboardButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å" if lang == 'ru' else "Send", callback_data='send'),
         InlineKeyboardButton("–û—Ç–º–µ–Ω–∏—Ç—å" if lang == 'ru' else "Cancel", callback_data='cancel')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    await update.message.reply_text(confirm_text, reply_markup=reply_markup)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏
async def button(update: Update, context: CallbackContext) -> None:
    query = update.callback_query
    await query.answer()
    lang = get_user_language(query, context)  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π —è–∑—ã–∫
    bot: Bot = context.bot

    if query.data == 'send':
        message_id = context.user_data.get('pending_message')
        try:
            # –ü–µ—Ä–µ—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø—É
            await bot.forward_message(
                chat_id=FORWARD_CHAT_ID,
                from_chat_id=query.message.chat_id,
                message_id=message_id
            )
            logger.info(f"–°–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ—Å–ª–∞–Ω–æ –≤ {FORWARD_CHAT_ID} –æ—Ç {query.message.chat_id}")
            await query.edit_message_text(MESSAGES[lang]['thanks'])
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Å—ã–ª–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
            await query.edit_message_text(MESSAGES[lang]['error'])
    else:
        await query.edit_message_text(MESSAGES[lang]['canceled'])

def main() -> None:
    # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    application = Application.builder().token(TOKEN).build()

    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥ –∏ —Å–æ–æ–±—â–µ–Ω–∏–π
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(CommandHandler("lang", set_language))
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç, —Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ, –≥–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –¥–æ–∫—É–º–µ–Ω—Ç—ã
    application.add_handler(MessageHandler(
        filters.TEXT | filters.PHOTO | filters.VIDEO | filters.VOICE | filters.Document.ALL,
        handle_message
    ))
    application.add_handler(CallbackQueryHandler(button))

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    application.run_polling(allowed_updates=Update.ALL_TYPES)

if __name__ == '__main__':
    main()
